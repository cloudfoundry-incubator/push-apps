---
docker-environment: &docker-environment
  COMPOSE_PROJECT_NAME: push_apps
  DOCKER_HOST: "tcp://10.0.1.9:4243"
  DOCKER_CA_CERT: ((docker-tls.ca))
  DOCKER_TLS_CERT: ((docker-tls.certificate))
  DOCKER_TLS_KEY: ((docker-tls.private_key))
  INTEGRATION_HOST: "10.0.1.9"

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: push-apps
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/push-apps.git
    branch: master
    private_key: ((push-apps-git-key))
    submodules: all
- name: slack-alert
  type: slack-notification
  source:
    url: ((webhook-url))
- name: push-app-ci-image
  type: docker-image
  source:
    repository: pcfmetrics/push-apps-ci
    username: "((docker-username))"
    password: "((docker-password))"

jobs:
- name: test-push-apps
  build_logs_to_retain: 25
  serial: true
  on_failure:
    put: slack-alert
    params:
      text: "$BUILD_PIPELINE_NAME <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME> failed."
  plan:
  - get: push-apps
    trigger: true
  - aggregate:
    - task: test
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: pcfmetrics/push-apps-ci
            tag: latest
        inputs:
        - name: push-apps
        caches:
        - path: "gradleCache"
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              mkdir -p gradleCache
              gradle_cache="$(pwd)/gradleCache"

              echo "Running tests!"
              pushd push-apps
                ./gradlew -g ${gradle_cache} clean build
              popd
    - task: acceptance-test
      attempts: 3
      timeout: 15m
      params:
        <<: *docker-environment
        LOG_LEVEL: "debug"
        CF_LOG_LEVEL: "error"
        CF_API: ((cf-api))
        CF_USERNAME: ((cf-username))
        CF_PASSWORD: ((cf-password))
        CF_DOMAIN: ((cf-domain))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: pcfmetrics/push-apps-ci
            tag: latest
        inputs:
        - name: push-apps
        caches:
        - path: "gradleCache"
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              mkdir -p gradleCache
              gradle_cache="$(pwd)/gradleCache"

              export DOCKER_CERT_PATH="$(pwd)/docker_certs"
              mkdir -p $DOCKER_CERT_PATH
              echo "$DOCKER_TLS_KEY" > $DOCKER_CERT_PATH/key.pem
              echo "$DOCKER_TLS_CERT" > $DOCKER_CERT_PATH/cert.pem
              echo "$DOCKER_CA_CERT" > $DOCKER_CERT_PATH/ca.pem

              echo "Running Acceptance Tests!"

              pushd push-apps
                ./gradlew -g ${gradle_cache} acceptanceTest
              popd
  - task: docker-compose-down
    params:
      <<: *docker-environment
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/push-apps-ci
          tag: latest
      inputs:
      - name: push-apps
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            pushd push-apps/tests/cli-acceptance-tests/src/test/kotlin/support
              docker-compose down
            popd

- name: publish-push-apps
  build_logs_to_retain: 25
  serial: true
  on_failure:
    put: slack-alert
    params:
      text: "$BUILD_PIPELINE_NAME <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME> failed."
  plan:
  - aggregate:
    - get: push-apps
      trigger: true
      passed: [ test-push-apps ]
  - task: publish
    params:
      BINTRAY_USER: ((bintray-user))
      BINTRAY_API_KEY: ((bintray-api-key))
      BINTRAY_GPG_PASSPHRASE: ((bintray-gpg-passphrase))
      MAVEN_CENTRAL_TOKEN_USER: ((maven-central-token-user))
      MAVEN_CENTRAL_TOKEN_PASSWORD: ((maven-central-token-password))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          tag: latest
          repository: pcfmetrics/push-apps-ci
      inputs:
      - name: push-apps
      outputs:
      - name: push-apps-bumped
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            pushd push-apps
              ./gradlew bumpPatch

              git add -A
              git commit -m "bump version"

              ./gradlew assemble bintrayUpload
              ./gradlew publishUploadedBintrayArtifacts
              ./gradlew signBintrayArtifacts
              ./gradlew syncArtifactsToMavenCentral
            popd

            rsync -a push-apps/ push-apps-bumped
  - put: push-apps
    params:
      repository: push-apps-bumped
      rebase: true

- name: build-docker-images
  build_logs_to_retain: 25
  serial: true
  plan:
  - get: push-apps
    trigger: false
  - put: push-app-ci-image
    params:
      build: push-apps/ci
    get_params:
      skip_download: true

